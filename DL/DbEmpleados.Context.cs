//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ESantiagoEmpleadosEntities : DbContext
    {
        public ESantiagoEmpleadosEntities()
            : base("name=ESantiagoEmpleadosEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Departamento> Departamento { get; set; }
        public virtual DbSet<Empleado> Empleado { get; set; }
        public virtual DbSet<Sueldo> Sueldo { get; set; }
    
        public virtual ObjectResult<EmpleadoGetAll_Result> EmpleadoGetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<EmpleadoGetAll_Result>("EmpleadoGetAll");
        }
    
        public virtual ObjectResult<DepartamentoGetAll_Result> DepartamentoGetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DepartamentoGetAll_Result>("DepartamentoGetAll");
        }
    
        public virtual int EmpleadoAdd(string claveEmpleado, string nombre, string apellidoPaterno, string apellidoMaterno, Nullable<System.DateTime> fechaIngreso, Nullable<System.DateTime> fechaNacimiento, string claveDepartamento, Nullable<decimal> sueldoMensual, string formaPago)
        {
            var claveEmpleadoParameter = claveEmpleado != null ?
                new ObjectParameter("ClaveEmpleado", claveEmpleado) :
                new ObjectParameter("ClaveEmpleado", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apellidoPaternoParameter = apellidoPaterno != null ?
                new ObjectParameter("ApellidoPaterno", apellidoPaterno) :
                new ObjectParameter("ApellidoPaterno", typeof(string));
    
            var apellidoMaternoParameter = apellidoMaterno != null ?
                new ObjectParameter("ApellidoMaterno", apellidoMaterno) :
                new ObjectParameter("ApellidoMaterno", typeof(string));
    
            var fechaIngresoParameter = fechaIngreso.HasValue ?
                new ObjectParameter("FechaIngreso", fechaIngreso) :
                new ObjectParameter("FechaIngreso", typeof(System.DateTime));
    
            var fechaNacimientoParameter = fechaNacimiento.HasValue ?
                new ObjectParameter("FechaNacimiento", fechaNacimiento) :
                new ObjectParameter("FechaNacimiento", typeof(System.DateTime));
    
            var claveDepartamentoParameter = claveDepartamento != null ?
                new ObjectParameter("ClaveDepartamento", claveDepartamento) :
                new ObjectParameter("ClaveDepartamento", typeof(string));
    
            var sueldoMensualParameter = sueldoMensual.HasValue ?
                new ObjectParameter("SueldoMensual", sueldoMensual) :
                new ObjectParameter("SueldoMensual", typeof(decimal));
    
            var formaPagoParameter = formaPago != null ?
                new ObjectParameter("FormaPago", formaPago) :
                new ObjectParameter("FormaPago", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EmpleadoAdd", claveEmpleadoParameter, nombreParameter, apellidoPaternoParameter, apellidoMaternoParameter, fechaIngresoParameter, fechaNacimientoParameter, claveDepartamentoParameter, sueldoMensualParameter, formaPagoParameter);
        }
    
        public virtual int EmpleadoDelete(string claveEmpleado)
        {
            var claveEmpleadoParameter = claveEmpleado != null ?
                new ObjectParameter("ClaveEmpleado", claveEmpleado) :
                new ObjectParameter("ClaveEmpleado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EmpleadoDelete", claveEmpleadoParameter);
        }
    
        public virtual ObjectResult<EmpleadoGetByClaveEmpleado_Result> EmpleadoGetByClaveEmpleado(string claveEmpleado)
        {
            var claveEmpleadoParameter = claveEmpleado != null ?
                new ObjectParameter("ClaveEmpleado", claveEmpleado) :
                new ObjectParameter("ClaveEmpleado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<EmpleadoGetByClaveEmpleado_Result>("EmpleadoGetByClaveEmpleado", claveEmpleadoParameter);
        }
    
        public virtual int EmpleadoUpdate(string claveEmpleado, string nombre, string apellidoPaterno, string apellidoMaterno, Nullable<System.DateTime> fechaIngreso, Nullable<System.DateTime> fechaNacimiento, string claveDepartamento, Nullable<decimal> sueldoMensual, string formaPago)
        {
            var claveEmpleadoParameter = claveEmpleado != null ?
                new ObjectParameter("ClaveEmpleado", claveEmpleado) :
                new ObjectParameter("ClaveEmpleado", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apellidoPaternoParameter = apellidoPaterno != null ?
                new ObjectParameter("ApellidoPaterno", apellidoPaterno) :
                new ObjectParameter("ApellidoPaterno", typeof(string));
    
            var apellidoMaternoParameter = apellidoMaterno != null ?
                new ObjectParameter("ApellidoMaterno", apellidoMaterno) :
                new ObjectParameter("ApellidoMaterno", typeof(string));
    
            var fechaIngresoParameter = fechaIngreso.HasValue ?
                new ObjectParameter("FechaIngreso", fechaIngreso) :
                new ObjectParameter("FechaIngreso", typeof(System.DateTime));
    
            var fechaNacimientoParameter = fechaNacimiento.HasValue ?
                new ObjectParameter("FechaNacimiento", fechaNacimiento) :
                new ObjectParameter("FechaNacimiento", typeof(System.DateTime));
    
            var claveDepartamentoParameter = claveDepartamento != null ?
                new ObjectParameter("ClaveDepartamento", claveDepartamento) :
                new ObjectParameter("ClaveDepartamento", typeof(string));
    
            var sueldoMensualParameter = sueldoMensual.HasValue ?
                new ObjectParameter("SueldoMensual", sueldoMensual) :
                new ObjectParameter("SueldoMensual", typeof(decimal));
    
            var formaPagoParameter = formaPago != null ?
                new ObjectParameter("FormaPago", formaPago) :
                new ObjectParameter("FormaPago", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EmpleadoUpdate", claveEmpleadoParameter, nombreParameter, apellidoPaternoParameter, apellidoMaternoParameter, fechaIngresoParameter, fechaNacimientoParameter, claveDepartamentoParameter, sueldoMensualParameter, formaPagoParameter);
        }
    }
}
